[{"/home/ryan/Projets/myspotify/Projets/src/index.tsx":"1","/home/ryan/Projets/myspotify/Projets/src/serviceWorker.ts":"2","/home/ryan/Projets/myspotify/Projets/src/redux/store.ts":"3","/home/ryan/Projets/myspotify/Projets/src/components/App/App.tsx":"4","/home/ryan/Projets/myspotify/Projets/src/components/user/UserSlice.tsx":"5","/home/ryan/Projets/myspotify/Projets/src/components/authorization/AuthorizationSlice.tsx":"6","/home/ryan/Projets/myspotify/Projets/src/components/topArtists/TopArtistsSlice.tsx":"7","/home/ryan/Projets/myspotify/Projets/src/components/ArtistPage/trackArtistSlice.tsx":"8","/home/ryan/Projets/myspotify/Projets/src/components/playlists/PlaylistsSlice.tsx":"9","/home/ryan/Projets/myspotify/Projets/src/components/authorization/Authorization.tsx":"10","/home/ryan/Projets/myspotify/Projets/src/components/App/Home.tsx":"11","/home/ryan/Projets/myspotify/Projets/src/oauthConfig.ts":"12","/home/ryan/Projets/myspotify/Projets/src/utils/hashUtils.ts":"13","/home/ryan/Projets/myspotify/Projets/src/components/playlists/Playlists.tsx":"14","/home/ryan/Projets/myspotify/Projets/src/components/playlists/Playlist.tsx":"15","/home/ryan/Projets/myspotify/Projets/src/components/topArtists/TopArtists.tsx":"16","/home/ryan/Projets/myspotify/Projets/src/components/ArtistPage/trackArtist.tsx":"17"},{"size":670,"mtime":1658478900538,"results":"18","hashOfConfig":"19"},{"size":5424,"mtime":1658478900538,"results":"20","hashOfConfig":"19"},{"size":856,"mtime":1658478900538,"results":"21","hashOfConfig":"19"},{"size":621,"mtime":1658478900538,"results":"22","hashOfConfig":"19"},{"size":1901,"mtime":1658478900538,"results":"23","hashOfConfig":"19"},{"size":1354,"mtime":1658478900538,"results":"24","hashOfConfig":"19"},{"size":1620,"mtime":1658478900538,"results":"25","hashOfConfig":"19"},{"size":2929,"mtime":1658478900538,"results":"26","hashOfConfig":"19"},{"size":3516,"mtime":1658480788807,"results":"27","hashOfConfig":"19"},{"size":2519,"mtime":1658478900538,"results":"28","hashOfConfig":"19"},{"size":9482,"mtime":1658478900538,"results":"29","hashOfConfig":"19"},{"size":421,"mtime":1658478900538,"results":"30","hashOfConfig":"19"},{"size":524,"mtime":1658478900538,"results":"31","hashOfConfig":"19"},{"size":3214,"mtime":1658478900538,"results":"32","hashOfConfig":"19"},{"size":6355,"mtime":1658478900538,"results":"33","hashOfConfig":"19"},{"size":6715,"mtime":1658482212211,"results":"34","hashOfConfig":"19"},{"size":3856,"mtime":1658482430580,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"h720ny",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ryan/Projets/myspotify/Projets/src/index.tsx",[],["77","78"],"/home/ryan/Projets/myspotify/Projets/src/serviceWorker.ts",[],"/home/ryan/Projets/myspotify/Projets/src/redux/store.ts",[],"/home/ryan/Projets/myspotify/Projets/src/components/App/App.tsx",["79","80","81","82"],"import React from 'react';\r\nimport {Authorization} from '../authorization/Authorization';\r\nimport './App.css';\r\nimport Home from \"./Home\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectIsLoggedIn} from \"../authorization/AuthorizationSlice\";\r\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    const isLoggedIn = useSelector(selectIsLoggedIn);\r\n\r\n    console.log(isLoggedIn);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {!isLoggedIn && <Authorization/>}\r\n            {isLoggedIn && <Home/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","/home/ryan/Projets/myspotify/Projets/src/components/user/UserSlice.tsx",[],"/home/ryan/Projets/myspotify/Projets/src/components/authorization/AuthorizationSlice.tsx",[],"/home/ryan/Projets/myspotify/Projets/src/components/topArtists/TopArtistsSlice.tsx",["83"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../../redux/store';\nimport {\n    setLoggedIn\n} from '../authorization/AuthorizationSlice';\n\ninterface TopArtistsState {\n    topArtists: any[];\n    readMore: boolean\n}\n\nconst initialState: TopArtistsState = {\n    topArtists: [],\n    readMore: false\n};\n\nexport const homeSlice = createSlice({\n    name: 'Home',\n    initialState,\n    reducers: {\n        setData: (state, action: PayloadAction<any>) => {\n            state.topArtists = [];\n            action.payload.items.forEach((item: any) => {\n                state.topArtists.push(item);\n            })\n        },\n        setReadMore: (state, action: PayloadAction<any>) => {\n            state.readMore = action.payload;\n        }\n    },\n});\n\nexport const { setData, setReadMore } = homeSlice.actions;\n\nexport const selectData = (state: RootState) => state.topArtists.topArtists;\nexport const selectReadMore = (state: RootState) => state.topArtists.readMore;\n\nexport const setUsersArtists = (accessToken: string): AppThunk => dispatch => {\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', 'Bearer ' + accessToken);\n\n    fetch('https://api.spotify.com/v1/me/top/artists', {\n        method: 'GET',\n        headers: myHeaders,\n    }).then(response => response.json())\n        .then((data) => {\n            dispatch(setData(data));\n        }).catch((error) => {\n        console.log(error);\n        if (error instanceof XMLHttpRequest) {\n            if (error.status === 401) {\n\n            }\n        }\n    });\n\n}\n\nexport default homeSlice.reducer;","/home/ryan/Projets/myspotify/Projets/src/components/ArtistPage/trackArtistSlice.tsx",[],"/home/ryan/Projets/myspotify/Projets/src/components/playlists/PlaylistsSlice.tsx",[],"/home/ryan/Projets/myspotify/Projets/src/components/authorization/Authorization.tsx",["84","85"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    setLoggedIn,\n    setAccessToken,\n    setTokenExpiryDate,\n    selectIsLoggedIn,\n    selectTokenExpiryDate,\n} from './AuthorizationSlice';\nimport { setUserProfileAsync } from '../user/UserSlice';\nimport { getAuthorizeHref } from '../../oauthConfig';\nimport { getHashParams, removeHashParamsFromUrl } from '../../utils/hashUtils';\n\nconst hashParams = getHashParams();\nconst access_token = hashParams.access_token;\nconst expires_in = hashParams.expires_in;\nremoveHashParamsFromUrl();\n\nexport function Authorization() {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    const tokenExpiryDate = useSelector(selectTokenExpiryDate);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (access_token) {\n            dispatch(setLoggedIn(true));\n            dispatch(setAccessToken(access_token));\n            dispatch(setTokenExpiryDate(Number(expires_in)));\n            dispatch(setUserProfileAsync(access_token));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"bg-white\">\n            <div className=\"max-w-7xl mx-auto py-16 px-4 sm:px-6 lg:px-8\">\n                <div className=\"bg-black rounded-lg shadow-xl overflow-hidden \">\n                    <div className=\"pt-10 pb-12 px-6 sm:pt-16 sm:px-16 lg:py-16 lg:pr-0 xl:py-20 xl:px-20\">\n                        <div className=\"lg:self-center\">\n                            <h2 className=\"text-3xl font-extrabold text-green-400 sm:text-4xl\">\n                                <span className=\"block\">Projet MySpotify React</span>\n                            </h2>\n                            <p className=\"mt-4 text-lg leading-6 text-indigo-200\">Cliquez sur le boutton ci-dessous pour vous connecter à l'interface avec votre compte</p>\n                            <button\n                                className=\"mt-8 bg-white border border-transparent rounded-md shadow px-5 py-3 inline-flex items-center text-base font-medium text-indigo-600 hover:bg-indigo-50\"\n                                aria-label=\"Log in using OAuth 2.0\"\n                                onClick={() => window.open(getAuthorizeHref(), '_self')}\n                            >\n                                Log in with Spotify\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","/home/ryan/Projets/myspotify/Projets/src/components/App/Home.tsx",["86","87","88","89","90","91","92","93","94"],"import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Link, Route, Switch, useHistory} from \"react-router-dom\";\nimport {TopArtists} from \"../topArtists/TopArtists\";\nimport {selectUserImage, selectUserName} from \"../user/UserSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Playlists} from \"../playlists/Playlists\";\nimport Playlist from \"../playlists/Playlist\";\nimport {TrackArtist} from \"../ArtistPage/trackArtist\";\nimport {setLoggedIn} from \"../authorization/AuthorizationSlice\";\n\nfunction Home() {\n    const userImage = useSelector(selectUserImage);\n    const dispatch = useDispatch();\n\n    return (\n        <Router>\n            <div className=\"min-h-screen  bg-black\">\n                <nav className=\"bg-black border-b border-gray-200\">\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                        <div className=\"flex justify-between h-16\">\n                            <div className=\"flex\">\n                                <div className=\"hidden sm:-my-px sm:ml-6 sm:flex sm:space-x-8\">\n                                    <Link to=\"/\"\n                                          className=\"text-white hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\">Home</Link>\n\n                                    <Link to=\"/playlists\"\n                                          className=\"text-white hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\">\n                                        Playlists\n                                    </Link>\n                                </div>\n                            </div>\n                            <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n                                <div className=\"ml-3 relative\">\n                                    <div>\n                                        <button type=\"button\"\n                                                className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                id=\"user-menu\" aria-expanded=\"false\" aria-haspopup=\"true\">\n                                            <span className=\"sr-only\">Open user menu</span>\n                                            <img className=\"h-8 w-8 rounded-full\"\n                                                 src={userImage}\n                                                 alt=\"\"\n                                                 onClick={() => {\n                                                     dispatch(setLoggedIn(false));\n                                                 }}\n                                            />\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div className=\"-mr-2 flex items-center sm:hidden\">\n                                <button type=\"button\"\n                                        className=\"bg-white inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                        aria-controls=\"mobile-menu\" aria-expanded=\"false\">\n                                    <span className=\"sr-only\">Open main menu</span>\n\n                                    <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                              d=\"M4 6h16M4 12h16M4 18h16\"/>\n                                    </svg>\n\n                                    <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                              d=\"M6 18L18 6M6 6l12 12\"/>\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"sm:hidden\" id=\"mobile-menu\">\n                        <div className=\"pt-2 pb-3 space-y-1\">\n                            <a href=\"#\"\n                               className=\"bg-indigo-50 border-indigo-500 text-indigo-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\">\n                                Dashboard\n                            </a>\n\n                            <a href=\"#\"\n                               className=\"border-transparent text-gray-600 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\">\n                                Team\n                            </a>\n\n                            <a href=\"#\"\n                               className=\"border-transparent text-gray-600 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\">\n                                Projects\n                            </a>\n\n                            <a href=\"#\"\n                               className=\"border-transparent text-gray-600 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-800 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\">\n                                Calendar\n                            </a>\n                        </div>\n                        <div className=\"pt-4 pb-3 border-t border-gray-200\">\n                            <div className=\"flex items-center px-4\">\n                                <div className=\"flex-shrink-0\">\n                                    <img className=\"h-10 w-10 rounded-full\"\n                                         src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixqx=fn8AepZtqW&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                                         alt=\"\"/>\n                                </div>\n                                <div className=\"ml-3\">\n                                    <div className=\"text-base font-medium text-gray-800\">Tom Cook</div>\n                                    <div className=\"text-sm font-medium text-gray-500\">tom@example.com</div>\n                                </div>\n                                <button\n                                    className=\"ml-auto bg-white flex-shrink-0 p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                    <span className=\"sr-only\">View notifications</span>\n                                    <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                              d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"/>\n                                    </svg>\n                                </button>\n                            </div>\n                            <div className=\"mt-3 space-y-1\">\n                                <a href=\"#\"\n                                   className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\">\n                                    Your Profile\n                                </a>\n\n                                <a href=\"#\"\n                                   className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\">\n                                    Settings\n                                </a>\n\n                                <a href=\"#\"\n                                   className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\">\n                                    Sign out\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"py-10\">\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <TopArtists/>\n                        </Route>\n                        <Route exact path=\"/playlists\">\n                            <Playlists/>\n                        </Route>\n                        <Route exact path=\"/playlist/:id\">\n                            <Playlist/>\n                        </Route>\n                        <Route exact path=\"/artist/:id\">\n                            <TrackArtist/>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n\n    );\n}\n\nexport default Home;\n","/home/ryan/Projets/myspotify/Projets/src/oauthConfig.ts",[],"/home/ryan/Projets/myspotify/Projets/src/utils/hashUtils.ts",[],"/home/ryan/Projets/myspotify/Projets/src/components/playlists/Playlists.tsx",["95","96","97","98","99","100","101","102","103"],"// @ts-ignore\nimport React, {Component, useEffect, useState} from 'react';\n// @ts-ignore\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setPlaylists, selectPlaylists, setCurrentPlaylist, selectPlaylistTracks} from \"./PlaylistsSlice\";\nimport {selectAccessToken} from \"../authorization/AuthorizationSlice\";\nimport {BrowserRouter as Router, Link, Route, Switch, Redirect} from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\n\n\n\nexport function Playlists() {\n    let history = useHistory();\n\n    const dispatch = useDispatch();\n    const access_token = useSelector(selectAccessToken);\n    useEffect(() => {\n        dispatch(setPlaylists(access_token));\n    }, []);\n    const playlists = useSelector(selectPlaylists);\n    /*const [displayOne, setDisplayOne] = useState(false);\n    const [currentPlaylist, setCurrentPlaylistId] = useState<{id: string; image:string; name:string}>({id: '', image: '', name: ''});*/\n\n    return (\n        <div className=\"bg-black\">\n            <div className=\"mx-auto py-12 px-4 max-w-7xl sm:px-6 lg:px-8 sm:py-4\">\n                <div className=\"space-y-12\">\n                    <div className=\"space-y-5 sm:space-y-4 md:max-w-xl lg:max-w-3xl xl:max-w-none\">\n                        <h2 className=\"text-3xl text-white font-extrabold tracking-tight sm:text-4xl\">Voici des\n                            playlists à découvrir</h2>\n                    </div>\n                    <ul className=\"space-y-12 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:gap-y-12 sm:space-y-0 lg:grid-cols-3 lg:gap-x-8\">\n                        {playlists.map(function (item: any) {\n                            return <li>\n                                <div className=\"space-y-4\">\n                                    <div className=\"aspect-w-3 aspect-h-2\">\n                                        <img className=\"object-cover shadow-lg rounded-lg\"\n                                             src={item.images[0].url}\n                                             alt=\"\"/>\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <button\n                                            className=\"read-more-link font-bold text-green-600 hover:text-green-400 hover:underline\"\n                                            onClick={() => {\n                                                dispatch(setCurrentPlaylist({image: item.images[0].url, name: item.name}))\n                                                history.push('/playlist/' + item.id);\n                                                /*dispatch(setPlaylistTracks(access_token, item.id));\n                                                setCurrentPlaylistId({id:item.id, image:item.images[0].url, name:item.name});*/\n                                            }}>\n                                            <h3>{item.name}</h3>\n                                        </button>\n                                    </div>\n                                </div>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Playlists;","/home/ryan/Projets/myspotify/Projets/src/components/playlists/Playlist.tsx",["104","105","106","107"],"// @ts-ignore\nimport React, {Component, useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\n// @ts-ignore\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n    setPlaylists,\n    setPlaylistTracks,\n    selectPlaylistTracks,\n    selectCurrentPlaylist\n} from \"./PlaylistsSlice\";\nimport {selectAccessToken} from \"../authorization/AuthorizationSlice\";\n\nexport function Playlist() {\n    const dispatch = useDispatch();\n    const access_token = useSelector(selectAccessToken);\n    let {id} = useParams()\n    useEffect(() => {\n        dispatch(setPlaylistTracks(access_token, id));\n    }, []);\n    const tracks = useSelector(selectPlaylistTracks);\n    const currentPlaylist = useSelector(selectCurrentPlaylist);\n\n    return (\n        <div className=\"bg-black\">\n            <div className=\"mx-auto py-12 px-4 max-w-7xl sm:px-6 lg:px-8 sm:py-4\">\n                <div className=\"relative bg-black overflow-hidden\">\n                    <div className=\"relative px-4 sm:px-6 sm:px-8\">\n                        <div className=\"mt-6 sm:pb-5 prose-indigo prose-lg text-white mx-auto\">\n                            <figure>\n                                <img className=\"w-full rounded-lg md:max-w-xs object-center\"\n                                     src={currentPlaylist.image}\n                                     alt=\"\" width=\"300\" height=\"300\"/>\n                                <h2 className=\"text-3xl text-white font-extrabold tracking-tight sm:text-4xl\">\n                                    {currentPlaylist.name}\n                                </h2>\n                            </figure>\n                        </div>\n                        <div className=\"flex flex-col\">\n                            <div className=\"-my-2 overflow-x-auto sm:-mx-10 lg:-mx-12\">\n                                <div className=\"py-2 align-middle inline-block min-w-full\">\n                                    <div className=\"shadow overflow-hidden border-b border-white sm:rounded-lg\">\n                                        <table className=\"min-w-full divide-y divide-white\">\n                                            <thead className=\"bg-black border-2 border-white\">\n                                            <tr>\n                                                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase tracking-wider\">\n                                                    Titre\n                                                </th>\n                                                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase tracking-wider\">\n                                                    Album\n                                                </th>\n                                                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase tracking-wider\">\n                                                    Status\n                                                </th>\n                                                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase tracking-wider\">\n                                                    Role\n                                                </th>\n                                            </tr>\n                                            </thead>\n                                            <tbody className=\"bg-black divide-y divide-gray-200\">\n                                            {tracks.map(function(track: any) {\n                                                return <tr>\n                                                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                        <div className=\"flex items-center\">\n                                                            <div className=\"flex-shrink-0 h-10 w-10\">\n                                                                <img className=\"h-10 w-10 rounded-full\" src={track.album.images[0].url} alt=\"\"/>\n                                                            </div>\n                                                            <div className=\"ml-4\">\n                                                                <div className=\"text-sm font-medium text-white text-left\">\n                                                                    {track.name}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                        <div className=\"text-sm text-white text-left\">{track.artists[0].name}</div>\n                                                    </td>\n                                                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                        <div className=\"text-sm text-white text-left\">{track.album.name}</div>\n                                                    </td>\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                                        {getTimeString(track.duration_ms)}\n                                                    </td>\n                                                </tr>\n                                            })}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nvar getTimeString = function(timeInMs: any) {\n    let delim = \":\";\n    let minutes: string | number = Math.floor(timeInMs / (1000 * 60) % 60);\n    let seconds: string | number = Math.floor(timeInMs / 1000 % 60);\n\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    return minutes + delim + seconds;\n}\n\nexport default Playlist;","/home/ryan/Projets/myspotify/Projets/src/components/topArtists/TopArtists.tsx",["108","109","110","111","112","113","114"],"/home/ryan/Projets/myspotify/Projets/src/components/ArtistPage/trackArtist.tsx",["115","116","117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":7,"column":26,"nodeType":"125","messageId":"126","endLine":7,"endColumn":32},{"ruleId":"123","severity":1,"message":"127","line":7,"column":34,"nodeType":"125","messageId":"126","endLine":7,"endColumn":38},{"ruleId":"123","severity":1,"message":"128","line":7,"column":40,"nodeType":"125","messageId":"126","endLine":7,"endColumn":45},{"ruleId":"123","severity":1,"message":"129","line":7,"column":47,"nodeType":"125","messageId":"126","endLine":7,"endColumn":53},{"ruleId":"123","severity":1,"message":"130","line":4,"column":5,"nodeType":"125","messageId":"126","endLine":4,"endColumn":16},{"ruleId":"123","severity":1,"message":"131","line":20,"column":11,"nodeType":"125","messageId":"126","endLine":20,"endColumn":21},{"ruleId":"123","severity":1,"message":"132","line":22,"column":11,"nodeType":"125","messageId":"126","endLine":22,"endColumn":26},{"ruleId":"123","severity":1,"message":"133","line":3,"column":55,"nodeType":"125","messageId":"126","endLine":3,"endColumn":65},{"ruleId":"123","severity":1,"message":"134","line":5,"column":26,"nodeType":"125","messageId":"126","endLine":5,"endColumn":40},{"ruleId":"135","severity":1,"message":"136","line":76,"column":29,"nodeType":"137","endLine":77,"endColumn":145},{"ruleId":"135","severity":1,"message":"136","line":81,"column":29,"nodeType":"137","endLine":82,"endColumn":190},{"ruleId":"135","severity":1,"message":"136","line":86,"column":29,"nodeType":"137","endLine":87,"endColumn":190},{"ruleId":"135","severity":1,"message":"136","line":91,"column":29,"nodeType":"137","endLine":92,"endColumn":190},{"ruleId":"135","severity":1,"message":"136","line":118,"column":33,"nodeType":"137","endLine":119,"endColumn":138},{"ruleId":"135","severity":1,"message":"136","line":123,"column":33,"nodeType":"137","endLine":124,"endColumn":138},{"ruleId":"135","severity":1,"message":"136","line":128,"column":33,"nodeType":"137","endLine":129,"endColumn":138},{"ruleId":"123","severity":1,"message":"138","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"123","severity":1,"message":"139","line":2,"column":38,"nodeType":"125","messageId":"126","endLine":2,"endColumn":46},{"ruleId":"123","severity":1,"message":"140","line":5,"column":60,"nodeType":"125","messageId":"126","endLine":5,"endColumn":80},{"ruleId":"123","severity":1,"message":"124","line":7,"column":26,"nodeType":"125","messageId":"126","endLine":7,"endColumn":32},{"ruleId":"123","severity":1,"message":"127","line":7,"column":34,"nodeType":"125","messageId":"126","endLine":7,"endColumn":38},{"ruleId":"123","severity":1,"message":"128","line":7,"column":40,"nodeType":"125","messageId":"126","endLine":7,"endColumn":45},{"ruleId":"123","severity":1,"message":"129","line":7,"column":47,"nodeType":"125","messageId":"126","endLine":7,"endColumn":53},{"ruleId":"123","severity":1,"message":"141","line":7,"column":55,"nodeType":"125","messageId":"126","endLine":7,"endColumn":63},{"ruleId":"142","severity":1,"message":"143","line":19,"column":8,"nodeType":"144","endLine":19,"endColumn":10,"suggestions":"145"},{"ruleId":"123","severity":1,"message":"138","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"123","severity":1,"message":"139","line":2,"column":38,"nodeType":"125","messageId":"126","endLine":2,"endColumn":46},{"ruleId":"123","severity":1,"message":"146","line":7,"column":5,"nodeType":"125","messageId":"126","endLine":7,"endColumn":17},{"ruleId":"142","severity":1,"message":"147","line":20,"column":8,"nodeType":"144","endLine":20,"endColumn":10,"suggestions":"148"},{"ruleId":"123","severity":1,"message":"138","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"123","severity":1,"message":"149","line":5,"column":21,"nodeType":"125","messageId":"126","endLine":5,"endColumn":35},{"ruleId":"123","severity":1,"message":"146","line":10,"column":46,"nodeType":"125","messageId":"126","endLine":10,"endColumn":58},{"ruleId":"123","severity":1,"message":"150","line":12,"column":9,"nodeType":"125","messageId":"126","endLine":12,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":24,"column":8,"nodeType":"144","endLine":24,"endColumn":10,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":45,"column":35,"nodeType":"154","messageId":"155","endLine":45,"endColumn":44},{"ruleId":"152","severity":1,"message":"153","line":69,"column":39,"nodeType":"154","messageId":"155","endLine":69,"endColumn":48},{"ruleId":"123","severity":1,"message":"138","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"139","line":1,"column":38,"nodeType":"125","messageId":"126","endLine":1,"endColumn":46},{"ruleId":"142","severity":1,"message":"147","line":15,"column":8,"nodeType":"144","endLine":15,"endColumn":10,"suggestions":"156"},{"ruleId":"152","severity":1,"message":"153","line":37,"column":40,"nodeType":"154","messageId":"155","endLine":37,"endColumn":49},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'setLoggedIn' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'tokenExpiryDate' is assigned a value but never used.","'useHistory' is defined but never used.","'selectUserName' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'useState' is defined but never used.","'selectPlaylistTracks' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'access_token' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["159"],"'setPlaylists' is defined but never used.","React Hook useEffect has missing dependencies: 'access_token', 'dispatch', and 'id'. Either include them or remove the dependency array.",["160"],"'selectReadMore' is defined but never used.","'Simulate' is defined but never used.",["161"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"163","fix":"167"},{"desc":"165","fix":"168"},"Update the dependencies array to be: [access_token, dispatch]",{"range":"169","text":"170"},"Update the dependencies array to be: [access_token, dispatch, id]",{"range":"171","text":"172"},{"range":"173","text":"170"},{"range":"174","text":"172"},[690,692],"[access_token, dispatch]",[621,623],"[access_token, dispatch, id]",[1108,1110],[624,626]]