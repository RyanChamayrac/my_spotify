{"ast":null,"code":"var _jsxFileName = \"/home/ryan/Projets/myspotify/Projets/src/components/playlists/Playlists.tsx\",\n    _s = $RefreshSig$();\n\n// @ts-ignore\nimport React, { useEffect } from 'react'; // @ts-ignore\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPlaylists, selectPlaylists, setCurrentPlaylist } from \"./PlaylistsSlice\";\nimport { selectAccessToken } from \"../authorization/AuthorizationSlice\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Playlists() {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const access_token = useSelector(selectAccessToken);\n  useEffect(() => {\n    dispatch(setPlaylists(access_token));\n  }, []);\n  const playlists = useSelector(selectPlaylists);\n  /*const [displayOne, setDisplayOne] = useState(false);\n  const [currentPlaylist, setCurrentPlaylistId] = useState<{id: string; image:string; name:string}>({id: '', image: '', name: ''});*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto py-12 px-4 max-w-7xl sm:px-6 lg:px-8 sm:py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-5 sm:space-y-4 md:max-w-xl lg:max-w-3xl xl:max-w-none\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl text-white font-extrabold tracking-tight sm:text-4xl\",\n            children: \"Voici des playlists \\xE0 d\\xE9couvrir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-12 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:gap-y-12 sm:space-y-0 lg:grid-cols-3 lg:gap-x-8\",\n          children: playlists.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"aspect-w-3 aspect-h-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"object-cover shadow-lg rounded-lg\",\n                    src: item.images[0].url,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"read-more-link font-bold text-green-600 hover:text-green-400 hover:underline\",\n                    onClick: () => {\n                      dispatch(setCurrentPlaylist({\n                        image: item.images[0].url,\n                        name: item.name\n                      }));\n                      history.push('/playlist/' + item.id);\n                      /*dispatch(setPlaylistTracks(access_token, item.id));\n                      setCurrentPlaylistId({id:item.id, image:item.images[0].url, name:item.name});*/\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Playlists, \"OR5dyjIO5oVDFlv8TbTGznhhWcE=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = Playlists;\nexport default Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"sources":["/home/ryan/Projets/myspotify/Projets/src/components/playlists/Playlists.tsx"],"names":["React","useEffect","useDispatch","useSelector","setPlaylists","selectPlaylists","setCurrentPlaylist","selectAccessToken","useHistory","Playlists","history","dispatch","access_token","playlists","map","item","images","url","image","name","push","id"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAA0BC,SAA1B,QAAoD,OAApD,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,YAAR,EAAsBC,eAAtB,EAAuCC,kBAAvC,QAAsF,kBAAtF;AACA,SAAQC,iBAAR,QAAgC,qCAAhC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAIA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AACxB,MAAIC,OAAO,GAAGF,UAAU,EAAxB;AAEA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,YAAY,GAAGT,WAAW,CAACI,iBAAD,CAAhC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACP,YAAY,CAACQ,YAAD,CAAb,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMC,SAAS,GAAGV,WAAW,CAACE,eAAD,CAA7B;AACA;AACJ;;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,sDAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,+DAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,+DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAI,UAAA,SAAS,EAAC,iGAAd;AAAA,oBACKQ,SAAS,CAACC,GAAV,CAAc,UAAUC,IAAV,EAAqB;AAChC,gCAAO;AAAA,qCACH;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,uBAAf;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,mCAAf;AACK,oBAAA,GAAG,EAAEA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,GADzB;AAEK,oBAAA,GAAG,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,yCACI;AACI,oBAAA,SAAS,EAAC,8EADd;AAEI,oBAAA,OAAO,EAAE,MAAM;AACXN,sBAAAA,QAAQ,CAACL,kBAAkB,CAAC;AAACY,wBAAAA,KAAK,EAAEH,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,GAAvB;AAA4BE,wBAAAA,IAAI,EAAEJ,IAAI,CAACI;AAAvC,uBAAD,CAAnB,CAAR;AACAT,sBAAAA,OAAO,CAACU,IAAR,CAAa,eAAeL,IAAI,CAACM,EAAjC;AACA;AAChD;AAC6C,qBAPL;AAAA,2CAQI;AAAA,gCAAKN,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,oBAAP;AAsBH,WAvBA;AADL;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAlDeV,S;UACED,U,EAEGN,W,EACIC,W,EAIHA,W;;;KARNM,S;AAoDhB,eAAeA,SAAf","sourcesContent":["// @ts-ignore\nimport React, {Component, useEffect, useState} from 'react';\n// @ts-ignore\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setPlaylists, selectPlaylists, setCurrentPlaylist, selectPlaylistTracks} from \"./PlaylistsSlice\";\nimport {selectAccessToken} from \"../authorization/AuthorizationSlice\";\nimport {BrowserRouter as Router, Link, Route, Switch, Redirect} from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\n\n\n\nexport function Playlists() {\n    let history = useHistory();\n\n    const dispatch = useDispatch();\n    const access_token = useSelector(selectAccessToken);\n    useEffect(() => {\n        dispatch(setPlaylists(access_token));\n    }, []);\n    const playlists = useSelector(selectPlaylists);\n    /*const [displayOne, setDisplayOne] = useState(false);\n    const [currentPlaylist, setCurrentPlaylistId] = useState<{id: string; image:string; name:string}>({id: '', image: '', name: ''});*/\n\n    return (\n        <div className=\"bg-black\">\n            <div className=\"mx-auto py-12 px-4 max-w-7xl sm:px-6 lg:px-8 sm:py-4\">\n                <div className=\"space-y-12\">\n                    <div className=\"space-y-5 sm:space-y-4 md:max-w-xl lg:max-w-3xl xl:max-w-none\">\n                        <h2 className=\"text-3xl text-white font-extrabold tracking-tight sm:text-4xl\">Voici des\n                            playlists à découvrir</h2>\n                    </div>\n                    <ul className=\"space-y-12 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:gap-y-12 sm:space-y-0 lg:grid-cols-3 lg:gap-x-8\">\n                        {playlists.map(function (item: any) {\n                            return <li>\n                                <div className=\"space-y-4\">\n                                    <div className=\"aspect-w-3 aspect-h-2\">\n                                        <img className=\"object-cover shadow-lg rounded-lg\"\n                                             src={item.images[0].url}\n                                             alt=\"\"/>\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <button\n                                            className=\"read-more-link font-bold text-green-600 hover:text-green-400 hover:underline\"\n                                            onClick={() => {\n                                                dispatch(setCurrentPlaylist({image: item.images[0].url, name: item.name}))\n                                                history.push('/playlist/' + item.id);\n                                                /*dispatch(setPlaylistTracks(access_token, item.id));\n                                                setCurrentPlaylistId({id:item.id, image:item.images[0].url, name:item.name});*/\n                                            }}>\n                                            <h3>{item.name}</h3>\n                                        </button>\n                                    </div>\n                                </div>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Playlists;"]},"metadata":{},"sourceType":"module"}