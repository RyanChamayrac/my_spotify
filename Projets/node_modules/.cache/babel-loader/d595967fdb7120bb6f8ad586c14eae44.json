{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  loggedIn: false,\n  accessToken: '',\n  tokenExpiryDate: ''\n};\nexport const authorizationSlice = createSlice({\n  name: 'authorization',\n  initialState,\n  reducers: {\n    setLoggedIn: (state, action) => {\n      state.loggedIn = action.payload;\n    },\n    setAccessToken: (state, action) => {\n      state.accessToken = action.payload;\n    },\n    setTokenExpiryDate: (state, action) => {\n      const date = new Date();\n      date.setSeconds(date.getSeconds() + action.payload);\n      state.tokenExpiryDate = date.toISOString();\n    }\n  }\n});\nexport const {\n  setLoggedIn,\n  setAccessToken,\n  setTokenExpiryDate\n} = authorizationSlice.actions;\nexport const selectIsLoggedIn = state => state.authorization.loggedIn;\nexport const selectAccessToken = state => state.authorization.accessToken;\nexport const selectTokenExpiryDate = state => state.authorization.tokenExpiryDate;\nexport default authorizationSlice.reducer;","map":{"version":3,"sources":["/home/ryan/Projets/myspotify/Projets/src/components/authorization/AuthorizationSlice.tsx"],"names":["createSlice","initialState","loggedIn","accessToken","tokenExpiryDate","authorizationSlice","name","reducers","setLoggedIn","state","action","payload","setAccessToken","setTokenExpiryDate","date","Date","setSeconds","getSeconds","toISOString","actions","selectIsLoggedIn","authorization","selectAccessToken","selectTokenExpiryDate","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AASA,MAAMC,YAAgC,GAAG;AACrCC,EAAAA,QAAQ,EAAE,KAD2B;AAErCC,EAAAA,WAAW,EAAE,EAFwB;AAGrCC,EAAAA,eAAe,EAAE;AAHoB,CAAzC;AAMA,OAAO,MAAMC,kBAAkB,GAAGL,WAAW,CAAC;AAC1CM,EAAAA,IAAI,EAAE,eADoC;AAE1CL,EAAAA,YAF0C;AAG1CM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA2C;AACpDD,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;AACH,KAHK;AAINC,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAA0C;AACtDD,MAAAA,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACH,KANK;AAONE,IAAAA,kBAAkB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAA0C;AAC1D,YAAMI,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoBP,MAAM,CAACC,OAA3C;AACAF,MAAAA,KAAK,CAACL,eAAN,GAAwBU,IAAI,CAACI,WAAL,EAAxB;AACH;AAXK;AAHgC,CAAD,CAAtC;AAkBP,OAAO,MAAM;AAAEV,EAAAA,WAAF;AAAeI,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,IAAsDR,kBAAkB,CAACc,OAA/E;AAEP,OAAO,MAAMC,gBAAgB,GAAIX,KAAD,IAAsBA,KAAK,CAACY,aAAN,CAAoBnB,QAAnE;AACP,OAAO,MAAMoB,iBAAiB,GAAIb,KAAD,IAAsBA,KAAK,CAACY,aAAN,CAAoBlB,WAApE;AACP,OAAO,MAAMoB,qBAAqB,GAAId,KAAD,IAAsBA,KAAK,CAACY,aAAN,CAAoBjB,eAAxE;AAEP,eAAeC,kBAAkB,CAACmB,OAAlC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../redux/store';\n\ninterface AuthorizationState {\n    loggedIn: boolean;\n    accessToken: string;\n    tokenExpiryDate: string;\n}\n\nconst initialState: AuthorizationState = {\n    loggedIn: false,\n    accessToken: '',\n    tokenExpiryDate: '',\n};\n\nexport const authorizationSlice = createSlice({\n    name: 'authorization',\n    initialState,\n    reducers: {\n        setLoggedIn: (state, action: PayloadAction<boolean>) => {\n            state.loggedIn = action.payload;\n        },\n        setAccessToken: (state, action: PayloadAction<string>) => {\n            state.accessToken = action.payload;\n        },\n        setTokenExpiryDate: (state, action: PayloadAction<number>) => {\n            const date = new Date()\n            date.setSeconds(date.getSeconds() + action.payload);\n            state.tokenExpiryDate = date.toISOString();\n        },\n    },\n});\n\nexport const { setLoggedIn, setAccessToken, setTokenExpiryDate } = authorizationSlice.actions;\n\nexport const selectIsLoggedIn = (state: RootState) => state.authorization.loggedIn;\nexport const selectAccessToken = (state: RootState) => state.authorization.accessToken;\nexport const selectTokenExpiryDate = (state: RootState) => state.authorization.tokenExpiryDate;\n\nexport default authorizationSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}