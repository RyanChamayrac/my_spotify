{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  topArtists: [],\n  readMore: false\n};\nexport const homeSlice = createSlice({\n  name: 'Home',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.topArtists = [];\n      action.payload.items.forEach(item => {\n        state.topArtists.push(item);\n      });\n    },\n    setReadMore: (state, action) => {\n      state.readMore = action.payload;\n    }\n  }\n});\nexport const {\n  setData,\n  setReadMore\n} = homeSlice.actions;\nexport const selectData = state => state.topArtists.topArtists;\nexport const selectReadMore = state => state.topArtists.readMore;\nexport const setUsersArtists = accessToken => dispatch => {\n  const myHeaders = new Headers();\n  myHeaders.append('Authorization', 'Bearer ' + accessToken);\n  fetch('https://api.spotify.com/v1/me/top/artists', {\n    method: 'GET',\n    headers: myHeaders\n  }).then(response => response.json()).then(data => {\n    dispatch(setData(data));\n  }).catch(error => {\n    console.log(error);\n\n    if (error instanceof XMLHttpRequest) {\n      if (error.status === 401) {}\n    }\n  });\n};\nexport default homeSlice.reducer;","map":{"version":3,"sources":["/home/ryan/Projets/myspotify/Projets/src/components/topArtists/TopArtistsSlice.tsx"],"names":["createSlice","initialState","topArtists","readMore","homeSlice","name","reducers","setData","state","action","payload","items","forEach","item","push","setReadMore","actions","selectData","selectReadMore","setUsersArtists","accessToken","dispatch","myHeaders","Headers","append","fetch","method","headers","then","response","json","data","catch","error","console","log","XMLHttpRequest","status","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAWA,MAAMC,YAA6B,GAAG;AAClCC,EAAAA,UAAU,EAAE,EADsB;AAElCC,EAAAA,QAAQ,EAAE;AAFwB,CAAtC;AAKA,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AACjCK,EAAAA,IAAI,EAAE,MAD2B;AAEjCJ,EAAAA,YAFiC;AAGjCK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAuC;AAC5CD,MAAAA,KAAK,CAACN,UAAN,GAAmB,EAAnB;AACAO,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBC,OAArB,CAA8BC,IAAD,IAAe;AACxCL,QAAAA,KAAK,CAACN,UAAN,CAAiBY,IAAjB,CAAsBD,IAAtB;AACH,OAFD;AAGH,KANK;AAONE,IAAAA,WAAW,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAuC;AAChDD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACH;AATK;AAHuB,CAAD,CAA7B;AAgBP,OAAO,MAAM;AAAEH,EAAAA,OAAF;AAAWQ,EAAAA;AAAX,IAA2BX,SAAS,CAACY,OAA3C;AAEP,OAAO,MAAMC,UAAU,GAAIT,KAAD,IAAsBA,KAAK,CAACN,UAAN,CAAiBA,UAA1D;AACP,OAAO,MAAMgB,cAAc,GAAIV,KAAD,IAAsBA,KAAK,CAACN,UAAN,CAAiBC,QAA9D;AAEP,OAAO,MAAMgB,eAAe,GAAIC,WAAD,IAAmCC,QAAQ,IAAI;AAC1E,QAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkC,YAAYJ,WAA9C;AAEAK,EAAAA,KAAK,CAAC,2CAAD,EAA8C;AAC/CC,IAAAA,MAAM,EAAE,KADuC;AAE/CC,IAAAA,OAAO,EAAEL;AAFsC,GAA9C,CAAL,CAGGM,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIKF,IAJL,CAIWG,IAAD,IAAU;AACZV,IAAAA,QAAQ,CAACd,OAAO,CAACwB,IAAD,CAAR,CAAR;AACH,GANL,EAMOC,KANP,CAMcC,KAAD,IAAW;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAIA,KAAK,YAAYG,cAArB,EAAqC;AACjC,UAAIH,KAAK,CAACI,MAAN,KAAiB,GAArB,EAA0B,CAEzB;AACJ;AACJ,GAbD;AAeH,CAnBM;AAqBP,eAAejC,SAAS,CAACkC,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../../redux/store';\nimport {\n    setLoggedIn\n} from '../authorization/AuthorizationSlice';\n\ninterface TopArtistsState {\n    topArtists: any[];\n    readMore: boolean\n}\n\nconst initialState: TopArtistsState = {\n    topArtists: [],\n    readMore: false\n};\n\nexport const homeSlice = createSlice({\n    name: 'Home',\n    initialState,\n    reducers: {\n        setData: (state, action: PayloadAction<any>) => {\n            state.topArtists = [];\n            action.payload.items.forEach((item: any) => {\n                state.topArtists.push(item);\n            })\n        },\n        setReadMore: (state, action: PayloadAction<any>) => {\n            state.readMore = action.payload;\n        }\n    },\n});\n\nexport const { setData, setReadMore } = homeSlice.actions;\n\nexport const selectData = (state: RootState) => state.topArtists.topArtists;\nexport const selectReadMore = (state: RootState) => state.topArtists.readMore;\n\nexport const setUsersArtists = (accessToken: string): AppThunk => dispatch => {\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', 'Bearer ' + accessToken);\n\n    fetch('https://api.spotify.com/v1/me/top/artists', {\n        method: 'GET',\n        headers: myHeaders,\n    }).then(response => response.json())\n        .then((data) => {\n            dispatch(setData(data));\n        }).catch((error) => {\n        console.log(error);\n        if (error instanceof XMLHttpRequest) {\n            if (error.status === 401) {\n\n            }\n        }\n    });\n\n}\n\nexport default homeSlice.reducer;"]},"metadata":{},"sourceType":"module"}